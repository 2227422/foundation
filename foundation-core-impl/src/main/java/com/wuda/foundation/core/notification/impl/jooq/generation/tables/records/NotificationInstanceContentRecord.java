/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.core.notification.impl.jooq.generation.tables.records;


import com.wuda.foundation.core.notification.impl.jooq.generation.tables.NotificationInstanceContent;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

import java.time.LocalDateTime;


/**
 * 代表一条实际已经发送的通知。通知模块的设计，不局限于发给用户，或者从用户发出来，任何实体都可以发送和接收，比如service A可以发送给service 
 * B，因此会有receiver type和sender type的设计。同样的内容，可以通过多种方式发送，比如通过邮件，短信发送同样的内容，因此发送方式不放到这个表中，这样的好处是不同的发送方式可以指向（共享）同一个通知。
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationInstanceContentRecord extends UpdatableRecordImpl<NotificationInstanceContentRecord> implements Record12<ULong, ULong, ULong, ULong, ULong, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -2118808965;

    /**
     * Setter for <code>foundation_notification.notification_instance_content.notification_instance_content_id</code>.
     */
    public void setNotificationInstanceContentId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.notification_instance_content_id</code>.
     */
    public ULong getNotificationInstanceContentId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.notification_definition_id</code>. 该通知基于哪个定义生成
     */
    public void setNotificationDefinitionId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.notification_definition_id</code>. 该通知基于哪个定义生成
     */
    public ULong getNotificationDefinitionId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.notification_definition_send_method_id</code>. 该内容由哪种方式方式
     */
    public void setNotificationDefinitionSendMethodId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.notification_definition_send_method_id</code>. 该内容由哪种方式方式
     */
    public ULong getNotificationDefinitionSendMethodId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.notification_definition_content_id</code>. 由于同一个定义可以反复发送通知，因此，必须加上该字段，以便区分这个通知是由定义的哪个内容发送出来的。
     */
    public void setNotificationDefinitionContentId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.notification_definition_content_id</code>. 由于同一个定义可以反复发送通知，因此，必须加上该字段，以便区分这个通知是由定义的哪个内容发送出来的。
     */
    public ULong getNotificationDefinitionContentId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.notification_category_id</code>. 所属分类ID
     */
    public void setNotificationCategoryId(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.notification_category_id</code>. 所属分类ID
     */
    public ULong getNotificationCategoryId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.title</code>. 标题
     */
    public void setTitle(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.title</code>. 标题
     */
    public String getTitle() {
        return (String) get(5);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.body</code>. 消息的实际内容,命名参考html body
     */
    public void setBody(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.body</code>. 消息的实际内容,命名参考html body
     */
    public String getBody() {
        return (String) get(6);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(10, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>foundation_notification.notification_instance_content.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(11, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_instance_content.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<ULong, ULong, ULong, ULong, ULong, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<ULong, ULong, ULong, ULong, ULong, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.NOTIFICATION_INSTANCE_CONTENT_ID;
    }

    @Override
    public Field<ULong> field2() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.NOTIFICATION_DEFINITION_ID;
    }

    @Override
    public Field<ULong> field3() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.NOTIFICATION_DEFINITION_SEND_METHOD_ID;
    }

    @Override
    public Field<ULong> field4() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.NOTIFICATION_DEFINITION_CONTENT_ID;
    }

    @Override
    public Field<ULong> field5() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.NOTIFICATION_CATEGORY_ID;
    }

    @Override
    public Field<String> field6() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.TITLE;
    }

    @Override
    public Field<String> field7() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.BODY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.CREATE_TIME;
    }

    @Override
    public Field<ULong> field9() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field11() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field12() {
        return NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getNotificationInstanceContentId();
    }

    @Override
    public ULong component2() {
        return getNotificationDefinitionId();
    }

    @Override
    public ULong component3() {
        return getNotificationDefinitionSendMethodId();
    }

    @Override
    public ULong component4() {
        return getNotificationDefinitionContentId();
    }

    @Override
    public ULong component5() {
        return getNotificationCategoryId();
    }

    @Override
    public String component6() {
        return getTitle();
    }

    @Override
    public String component7() {
        return getBody();
    }

    @Override
    public LocalDateTime component8() {
        return getCreateTime();
    }

    @Override
    public ULong component9() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component10() {
        return getLastModifyTime();
    }

    @Override
    public ULong component11() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component12() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getNotificationInstanceContentId();
    }

    @Override
    public ULong value2() {
        return getNotificationDefinitionId();
    }

    @Override
    public ULong value3() {
        return getNotificationDefinitionSendMethodId();
    }

    @Override
    public ULong value4() {
        return getNotificationDefinitionContentId();
    }

    @Override
    public ULong value5() {
        return getNotificationCategoryId();
    }

    @Override
    public String value6() {
        return getTitle();
    }

    @Override
    public String value7() {
        return getBody();
    }

    @Override
    public LocalDateTime value8() {
        return getCreateTime();
    }

    @Override
    public ULong value9() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value10() {
        return getLastModifyTime();
    }

    @Override
    public ULong value11() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value12() {
        return getIsDeleted();
    }

    @Override
    public NotificationInstanceContentRecord value1(ULong value) {
        setNotificationInstanceContentId(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value2(ULong value) {
        setNotificationDefinitionId(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value3(ULong value) {
        setNotificationDefinitionSendMethodId(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value4(ULong value) {
        setNotificationDefinitionContentId(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value5(ULong value) {
        setNotificationCategoryId(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value6(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value7(String value) {
        setBody(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value8(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value9(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value10(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value11(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord value12(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public NotificationInstanceContentRecord values(ULong value1, ULong value2, ULong value3, ULong value4, ULong value5, String value6, String value7, LocalDateTime value8, ULong value9, LocalDateTime value10, ULong value11, ULong value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationInstanceContentRecord
     */
    public NotificationInstanceContentRecord() {
        super(NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT);
    }

    /**
     * Create a detached, initialised NotificationInstanceContentRecord
     */
    public NotificationInstanceContentRecord(ULong notificationInstanceContentId, ULong notificationDefinitionId, ULong notificationDefinitionSendMethodId, ULong notificationDefinitionContentId, ULong notificationCategoryId, String title, String body, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(NotificationInstanceContent.NOTIFICATION_INSTANCE_CONTENT);

        set(0, notificationInstanceContentId);
        set(1, notificationDefinitionId);
        set(2, notificationDefinitionSendMethodId);
        set(3, notificationDefinitionContentId);
        set(4, notificationCategoryId);
        set(5, title);
        set(6, body);
        set(7, createTime);
        set(8, createUserId);
        set(9, lastModifyTime);
        set(10, lastModifyUserId);
        set(11, isDeleted);
    }
}
