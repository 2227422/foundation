/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.core.notification.impl.jooq.generation.tables.records;


import com.wuda.foundation.core.notification.impl.jooq.generation.tables.NotificationDefinitionObserverrExpandSnapshot;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;

import java.time.LocalDateTime;


/**
 * 接收者如果是“全部”，“莫某部门”这样的一类用户时，在接收者主表保存“全部”这样类型的接收者时，将当时那个瞬间“全部”的用户展开来保存到这个表中，比如当时整个公司全部只有20个人，则在这个表展开来就有20条记录，后面如果公司再新进新人，则新人不包含。
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationDefinitionObserverrExpandSnapshotRecord extends UpdatableRecordImpl<NotificationDefinitionObserverrExpandSnapshotRecord> implements Record10<ULong, ULong, ULong, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = 1416745637;

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.notification_definition_observer_expand_snapshot_id</code>. 表的主键
     */
    public void setNotificationDefinitionObserverExpandSnapshotId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.notification_definition_observer_expand_snapshot_id</code>. 表的主键
     */
    public ULong getNotificationDefinitionObserverExpandSnapshotId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.notification_definition_id</code>.
     */
    public void setNotificationDefinitionId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.notification_definition_id</code>.
     */
    public ULong getNotificationDefinitionId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.notification_definition_receiver_id</code>. 接收者主表，被展开的记录的ID。
     */
    public void setNotificationDefinitionReceiverId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.notification_definition_receiver_id</code>. 接收者主表，被展开的记录的ID。
     */
    public ULong getNotificationDefinitionReceiverId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.observer_type</code>. 接收者类型，不能再展开的接收者的类型，比如公司，部门，组等这样的接收者是可以最终展开成用户的；但是用户无法再展开，用户是最终的接收者。但是由于接收者还可以是服务等其他主体，因此这里不代表一定是最终用户，因此还是需要有类型进行区分。
     */
    public void setObserverType(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.observer_type</code>. 接收者类型，不能再展开的接收者的类型，比如公司，部门，组等这样的接收者是可以最终展开成用户的；但是用户无法再展开，用户是最终的接收者。但是由于接收者还可以是服务等其他主体，因此这里不代表一定是最终用户，因此还是需要有类型进行区分。
     */
    public UByte getObserverType() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.observer_identifier</code>. 接收者唯一标记
     */
    public void setObserverIdentifier(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.observer_identifier</code>. 接收者唯一标记
     */
    public ULong getObserverIdentifier() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(9, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observerr_expand_snapshot.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, ULong, ULong, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<ULong, ULong, ULong, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.NOTIFICATION_DEFINITION_OBSERVER_EXPAND_SNAPSHOT_ID;
    }

    @Override
    public Field<ULong> field2() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.NOTIFICATION_DEFINITION_ID;
    }

    @Override
    public Field<ULong> field3() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.NOTIFICATION_DEFINITION_RECEIVER_ID;
    }

    @Override
    public Field<UByte> field4() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.OBSERVER_TYPE;
    }

    @Override
    public Field<ULong> field5() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.OBSERVER_IDENTIFIER;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.CREATE_TIME;
    }

    @Override
    public Field<ULong> field7() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field9() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field10() {
        return NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getNotificationDefinitionObserverExpandSnapshotId();
    }

    @Override
    public ULong component2() {
        return getNotificationDefinitionId();
    }

    @Override
    public ULong component3() {
        return getNotificationDefinitionReceiverId();
    }

    @Override
    public UByte component4() {
        return getObserverType();
    }

    @Override
    public ULong component5() {
        return getObserverIdentifier();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public ULong component7() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component8() {
        return getLastModifyTime();
    }

    @Override
    public ULong component9() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component10() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getNotificationDefinitionObserverExpandSnapshotId();
    }

    @Override
    public ULong value2() {
        return getNotificationDefinitionId();
    }

    @Override
    public ULong value3() {
        return getNotificationDefinitionReceiverId();
    }

    @Override
    public UByte value4() {
        return getObserverType();
    }

    @Override
    public ULong value5() {
        return getObserverIdentifier();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public ULong value7() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value8() {
        return getLastModifyTime();
    }

    @Override
    public ULong value9() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value10() {
        return getIsDeleted();
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value1(ULong value) {
        setNotificationDefinitionObserverExpandSnapshotId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value2(ULong value) {
        setNotificationDefinitionId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value3(ULong value) {
        setNotificationDefinitionReceiverId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value4(UByte value) {
        setObserverType(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value5(ULong value) {
        setObserverIdentifier(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value7(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value8(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value9(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord value10(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverrExpandSnapshotRecord values(ULong value1, ULong value2, ULong value3, UByte value4, ULong value5, LocalDateTime value6, ULong value7, LocalDateTime value8, ULong value9, ULong value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationDefinitionObserverrExpandSnapshotRecord
     */
    public NotificationDefinitionObserverrExpandSnapshotRecord() {
        super(NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT);
    }

    /**
     * Create a detached, initialised NotificationDefinitionObserverrExpandSnapshotRecord
     */
    public NotificationDefinitionObserverrExpandSnapshotRecord(ULong notificationDefinitionObserverExpandSnapshotId, ULong notificationDefinitionId, ULong notificationDefinitionReceiverId, UByte observerType, ULong observerIdentifier, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(NotificationDefinitionObserverrExpandSnapshot.NOTIFICATION_DEFINITION_OBSERVERR_EXPAND_SNAPSHOT);

        set(0, notificationDefinitionObserverExpandSnapshotId);
        set(1, notificationDefinitionId);
        set(2, notificationDefinitionReceiverId);
        set(3, observerType);
        set(4, observerIdentifier);
        set(5, createTime);
        set(6, createUserId);
        set(7, lastModifyTime);
        set(8, lastModifyUserId);
        set(9, isDeleted);
    }
}
