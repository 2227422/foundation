/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.item.impl.jooq.generation.tables;


import com.wuda.foundation.item.impl.jooq.generation.FoundationItem;
import com.wuda.foundation.item.impl.jooq.generation.Indexes;
import com.wuda.foundation.item.impl.jooq.generation.Keys;
import com.wuda.foundation.item.impl.jooq.generation.tables.records.ItemCategoryRelationshipRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * 物品与分类的关系表，有很多设计是在物品表中放分类一，分类二，分类三这样的字段，这样设计的扩展性很弱
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemCategoryRelationship extends TableImpl<ItemCategoryRelationshipRecord> {

    private static final long serialVersionUID = 1947079897;

    /**
     * The reference instance of <code>foundation_item.item_category_relationship</code>
     */
    public static final ItemCategoryRelationship ITEM_CATEGORY_RELATIONSHIP = new ItemCategoryRelationship();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemCategoryRelationshipRecord> getRecordType() {
        return ItemCategoryRelationshipRecord.class;
    }

    /**
     * The column <code>foundation_item.item_category_relationship.id</code>.
     */
    public final TableField<ItemCategoryRelationshipRecord, ULong> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_category_relationship.item_id</code>. item id
     */
    public final TableField<ItemCategoryRelationshipRecord, ULong> ITEM_ID = createField(DSL.name("item_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "item id");

    /**
     * The column <code>foundation_item.item_category_relationship.item_category_id</code>. item category id
     */
    public final TableField<ItemCategoryRelationshipRecord, ULong> ITEM_CATEGORY_ID = createField(DSL.name("item_category_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "item category id");

    /**
     * The column <code>foundation_item.item_category_relationship.create_time</code>.
     */
    public final TableField<ItemCategoryRelationshipRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_item.item_category_relationship.create_user_id</code>.
     */
    public final TableField<ItemCategoryRelationshipRecord, ULong> CREATE_USER_ID = createField(DSL.name("create_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_category_relationship.is_deleted</code>.
     */
    public final TableField<ItemCategoryRelationshipRecord, ULong> IS_DELETED = createField(DSL.name("is_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>foundation_item.item_category_relationship</code> table reference
     */
    public ItemCategoryRelationship() {
        this(DSL.name("item_category_relationship"), null);
    }

    /**
     * Create an aliased <code>foundation_item.item_category_relationship</code> table reference
     */
    public ItemCategoryRelationship(String alias) {
        this(DSL.name(alias), ITEM_CATEGORY_RELATIONSHIP);
    }

    /**
     * Create an aliased <code>foundation_item.item_category_relationship</code> table reference
     */
    public ItemCategoryRelationship(Name alias) {
        this(alias, ITEM_CATEGORY_RELATIONSHIP);
    }

    private ItemCategoryRelationship(Name alias, Table<ItemCategoryRelationshipRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemCategoryRelationship(Name alias, Table<ItemCategoryRelationshipRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("物品与分类的关系表，有很多设计是在物品表中放分类一，分类二，分类三这样的字段，这样设计的扩展性很弱"), TableOptions.table());
    }

    public <O extends Record> ItemCategoryRelationship(Table<O> child, ForeignKey<O, ItemCategoryRelationshipRecord> key) {
        super(child, key, ITEM_CATEGORY_RELATIONSHIP);
    }

    @Override
    public Schema getSchema() {
        return FoundationItem.FOUNDATION_ITEM;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ITEM_CATEGORY_RELATIONSHIP_FK_ITEM_CASTEGORY_ID_IDX, Indexes.ITEM_CATEGORY_RELATIONSHIP_FK_ITEM_ID_IDX);
    }

    @Override
    public UniqueKey<ItemCategoryRelationshipRecord> getPrimaryKey() {
        return Keys.KEY_ITEM_CATEGORY_RELATIONSHIP_PRIMARY;
    }

    @Override
    public List<UniqueKey<ItemCategoryRelationshipRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemCategoryRelationshipRecord>>asList(Keys.KEY_ITEM_CATEGORY_RELATIONSHIP_PRIMARY, Keys.KEY_ITEM_CATEGORY_RELATIONSHIP_IDX_ITEM_AND_CATEGORY_ID);
    }

    @Override
    public ItemCategoryRelationship as(String alias) {
        return new ItemCategoryRelationship(DSL.name(alias), this);
    }

    @Override
    public ItemCategoryRelationship as(Name alias) {
        return new ItemCategoryRelationship(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemCategoryRelationship rename(String name) {
        return new ItemCategoryRelationship(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemCategoryRelationship rename(Name name) {
        return new ItemCategoryRelationship(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<ULong, ULong, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
