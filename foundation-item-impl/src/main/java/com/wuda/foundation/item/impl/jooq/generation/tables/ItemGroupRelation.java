/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.item.impl.jooq.generation.tables;


import com.wuda.foundation.item.impl.jooq.generation.FoundationItem;
import com.wuda.foundation.item.impl.jooq.generation.Indexes;
import com.wuda.foundation.item.impl.jooq.generation.Keys;
import com.wuda.foundation.item.impl.jooq.generation.tables.records.ItemGroupRelationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * 表示item所属的组。比如店铺是一种组，分类也是一种组，等等。item与所有的组的关系都记录在这个表里。
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemGroupRelation extends TableImpl<ItemGroupRelationRecord> {

    private static final long serialVersionUID = 85109661;

    /**
     * The reference instance of <code>foundation_item.item_group_relation</code>
     */
    public static final ItemGroupRelation ITEM_GROUP_RELATION = new ItemGroupRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemGroupRelationRecord> getRecordType() {
        return ItemGroupRelationRecord.class;
    }

    /**
     * The column <code>foundation_item.item_group_relation.id</code>.
     */
    public final TableField<ItemGroupRelationRecord, ULong> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>foundation_item.item_group_relation.item_id</code>.
     */
    public final TableField<ItemGroupRelationRecord, ULong> ITEM_ID = createField(DSL.name("item_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_group_relation.group_id</code>.
     */
    public final TableField<ItemGroupRelationRecord, ULong> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_group_relation.create_time</code>.
     */
    public final TableField<ItemGroupRelationRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_item.item_group_relation.create_user_id</code>.
     */
    public final TableField<ItemGroupRelationRecord, ULong> CREATE_USER_ID = createField(DSL.name("create_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_group_relation.last_modify_time</code>.
     */
    public final TableField<ItemGroupRelationRecord, LocalDateTime> LAST_MODIFY_TIME = createField(DSL.name("last_modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_item.item_group_relation.last_modify_user_id</code>.
     */
    public final TableField<ItemGroupRelationRecord, ULong> LAST_MODIFY_USER_ID = createField(DSL.name("last_modify_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_group_relation.is_deleted</code>.
     */
    public final TableField<ItemGroupRelationRecord, ULong> IS_DELETED = createField(DSL.name("is_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>foundation_item.item_group_relation</code> table reference
     */
    public ItemGroupRelation() {
        this(DSL.name("item_group_relation"), null);
    }

    /**
     * Create an aliased <code>foundation_item.item_group_relation</code> table reference
     */
    public ItemGroupRelation(String alias) {
        this(DSL.name(alias), ITEM_GROUP_RELATION);
    }

    /**
     * Create an aliased <code>foundation_item.item_group_relation</code> table reference
     */
    public ItemGroupRelation(Name alias) {
        this(alias, ITEM_GROUP_RELATION);
    }

    private ItemGroupRelation(Name alias, Table<ItemGroupRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemGroupRelation(Name alias, Table<ItemGroupRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("表示item所属的组。比如店铺是一种组，分类也是一种组，等等。item与所有的组的关系都记录在这个表里。"), TableOptions.table());
    }

    public <O extends Record> ItemGroupRelation(Table<O> child, ForeignKey<O, ItemGroupRelationRecord> key) {
        super(child, key, ITEM_GROUP_RELATION);
    }

    @Override
    public Schema getSchema() {
        return FoundationItem.FOUNDATION_ITEM;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ITEM_GROUP_RELATION_IDX_GROUP_ID, Indexes.ITEM_GROUP_RELATION_IDX_ITEM_ID);
    }

    @Override
    public Identity<ItemGroupRelationRecord, ULong> getIdentity() {
        return Keys.IDENTITY_ITEM_GROUP_RELATION;
    }

    @Override
    public UniqueKey<ItemGroupRelationRecord> getPrimaryKey() {
        return Keys.KEY_ITEM_GROUP_RELATION_PRIMARY;
    }

    @Override
    public List<UniqueKey<ItemGroupRelationRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemGroupRelationRecord>>asList(Keys.KEY_ITEM_GROUP_RELATION_PRIMARY);
    }

    @Override
    public ItemGroupRelation as(String alias) {
        return new ItemGroupRelation(DSL.name(alias), this);
    }

    @Override
    public ItemGroupRelation as(Name alias) {
        return new ItemGroupRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemGroupRelation rename(String name) {
        return new ItemGroupRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemGroupRelation rename(Name name) {
        return new ItemGroupRelation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, ULong, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
