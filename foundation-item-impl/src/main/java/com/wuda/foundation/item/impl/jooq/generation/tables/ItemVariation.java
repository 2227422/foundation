/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.item.impl.jooq.generation.tables;


import com.wuda.foundation.item.impl.jooq.generation.FoundationItem;
import com.wuda.foundation.item.impl.jooq.generation.Indexes;
import com.wuda.foundation.item.impl.jooq.generation.Keys;
import com.wuda.foundation.item.impl.jooq.generation.tables.records.ItemVariationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 规格。比如一件衣服，有红色，白色两种规格。具体的属性和值保存在MongoDB. 不能用属性ID关联, 而是要具体的属性名称和值, 避免关联的属性修改. 
 * 注意和SKU之间的区别.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemVariation extends TableImpl<ItemVariationRecord> {

    private static final long serialVersionUID = -1079791880;

    /**
     * The reference instance of <code>foundation_item.item_variation</code>
     */
    public static final ItemVariation ITEM_VARIATION = new ItemVariation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemVariationRecord> getRecordType() {
        return ItemVariationRecord.class;
    }

    /**
     * The column <code>foundation_item.item_variation.item_variation_id</code>.
     */
    public final TableField<ItemVariationRecord, ULong> ITEM_VARIATION_ID = createField(DSL.name("item_variation_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>foundation_item.item_variation.item_id</code>.
     */
    public final TableField<ItemVariationRecord, ULong> ITEM_ID = createField(DSL.name("item_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_variation.name</code>. 规格名称。方便管理。
     */
    public final TableField<ItemVariationRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "规格名称。方便管理。");

    /**
     * The column <code>foundation_item.item_variation.state</code>. 状态
     */
    public final TableField<ItemVariationRecord, UByte> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "状态");

    /**
     * The column <code>foundation_item.item_variation.create_time</code>.
     */
    public final TableField<ItemVariationRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_item.item_variation.create_user_id</code>.
     */
    public final TableField<ItemVariationRecord, ULong> CREATE_USER_ID = createField(DSL.name("create_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_variation.last_modify_time</code>.
     */
    public final TableField<ItemVariationRecord, LocalDateTime> LAST_MODIFY_TIME = createField(DSL.name("last_modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_item.item_variation.last_modify_user_id</code>.
     */
    public final TableField<ItemVariationRecord, ULong> LAST_MODIFY_USER_ID = createField(DSL.name("last_modify_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_item.item_variation.is_deleted</code>.
     */
    public final TableField<ItemVariationRecord, ULong> IS_DELETED = createField(DSL.name("is_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>foundation_item.item_variation</code> table reference
     */
    public ItemVariation() {
        this(DSL.name("item_variation"), null);
    }

    /**
     * Create an aliased <code>foundation_item.item_variation</code> table reference
     */
    public ItemVariation(String alias) {
        this(DSL.name(alias), ITEM_VARIATION);
    }

    /**
     * Create an aliased <code>foundation_item.item_variation</code> table reference
     */
    public ItemVariation(Name alias) {
        this(alias, ITEM_VARIATION);
    }

    private ItemVariation(Name alias, Table<ItemVariationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemVariation(Name alias, Table<ItemVariationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("规格。比如一件衣服，有红色，白色两种规格。具体的属性和值保存在MongoDB. 不能用属性ID关联, 而是要具体的属性名称和值, 避免关联的属性修改. 注意和SKU之间的区别."), TableOptions.table());
    }

    public <O extends Record> ItemVariation(Table<O> child, ForeignKey<O, ItemVariationRecord> key) {
        super(child, key, ITEM_VARIATION);
    }

    @Override
    public Schema getSchema() {
        return FoundationItem.FOUNDATION_ITEM;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ITEM_VARIATION_IDX_ITEM_ID);
    }

    @Override
    public Identity<ItemVariationRecord, ULong> getIdentity() {
        return Keys.IDENTITY_ITEM_VARIATION;
    }

    @Override
    public UniqueKey<ItemVariationRecord> getPrimaryKey() {
        return Keys.KEY_ITEM_VARIATION_PRIMARY;
    }

    @Override
    public List<UniqueKey<ItemVariationRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemVariationRecord>>asList(Keys.KEY_ITEM_VARIATION_PRIMARY);
    }

    @Override
    public ItemVariation as(String alias) {
        return new ItemVariation(DSL.name(alias), this);
    }

    @Override
    public ItemVariation as(Name alias) {
        return new ItemVariation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemVariation rename(String name) {
        return new ItemVariation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemVariation rename(Name name) {
        return new ItemVariation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<ULong, ULong, String, UByte, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
