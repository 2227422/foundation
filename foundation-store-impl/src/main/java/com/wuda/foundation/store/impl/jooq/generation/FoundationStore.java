/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.store.impl.jooq.generation;


import com.wuda.foundation.store.impl.jooq.generation.tables.StoreCore;
import com.wuda.foundation.store.impl.jooq.generation.tables.StoreGeneral;
import com.wuda.foundation.store.impl.jooq.generation.tables.StoreUserRelationship;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FoundationStore extends SchemaImpl {

    private static final long serialVersionUID = -1134886467;

    /**
     * The reference instance of <code>foundation_store</code>
     */
    public static final FoundationStore FOUNDATION_STORE = new FoundationStore();

    /**
     * 店铺信息
     */
    public final StoreCore STORE_CORE = StoreCore.STORE_CORE;

    /**
     * 店铺基本信息
     */
    public final StoreGeneral STORE_GENERAL = StoreGeneral.STORE_GENERAL;

    /**
     * 如果把用户ID字段放在store表中，表明店铺属于某个用户，但是如果有多个用户可以管理这个店铺呢？有种做法是一个用户作为另一个用户的子账号；也可以建立用户与店铺的关联关系，这样感觉更符合逻辑。把用户IID放在store表，可以很明确的表明店铺的owner，如果是用关联关系表的话，就需要明确的标明哪个用户是owner，哪些用户只是管理这个店铺的。
     */
    public final StoreUserRelationship STORE_USER_RELATIONSHIP = StoreUserRelationship.STORE_USER_RELATIONSHIP;

    /**
     * No further instances allowed
     */
    private FoundationStore() {
        super("foundation_store", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            StoreCore.STORE_CORE,
            StoreGeneral.STORE_GENERAL,
            StoreUserRelationship.STORE_USER_RELATIONSHIP);
    }
}
