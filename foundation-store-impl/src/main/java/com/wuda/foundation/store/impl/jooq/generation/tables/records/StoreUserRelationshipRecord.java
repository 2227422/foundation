/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.store.impl.jooq.generation.tables.records;


import com.wuda.foundation.store.impl.jooq.generation.tables.StoreUserRelationship;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * 如果把用户ID字段放在store表中，表明店铺属于某个用户，但是如果有多个用户可以管理这个店铺呢？有种做法是一个用户作为另一个用户的子账号；也可以建立用户与店铺的关联关系，这样感觉更符合逻辑。把用户IID放在store表，可以很明确的表明店铺的owner，如果是用关联关系表的话，就需要明确的标明哪个用户是owner，哪些用户只是管理这个店铺的。
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreUserRelationshipRecord extends UpdatableRecordImpl<StoreUserRelationshipRecord> implements Record7<ULong, ULong, ULong, Boolean, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = 1127853390;

    /**
     * Setter for <code>foundation_store.store_user_relationship.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_store.store_user_relationship.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_store.store_user_relationship.store_id</code>. store id
     */
    public void setStoreId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_store.store_user_relationship.store_id</code>. store id
     */
    public ULong getStoreId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>foundation_store.store_user_relationship.user_id</code>. user id
     */
    public void setUserId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_store.store_user_relationship.user_id</code>. user id
     */
    public ULong getUserId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>foundation_store.store_user_relationship.is_store_owner</code>. 该用户是否店铺的owner。一个店铺只能有一个owner，就好像在store表中放入user id字段，表明一对一的关系一样。
     */
    public void setIsStoreOwner(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_store.store_user_relationship.is_store_owner</code>. 该用户是否店铺的owner。一个店铺只能有一个owner，就好像在store表中放入user id字段，表明一对一的关系一样。
     */
    public Boolean getIsStoreOwner() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>foundation_store.store_user_relationship.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_store.store_user_relationship.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>foundation_store.store_user_relationship.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_store.store_user_relationship.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>foundation_store.store_user_relationship.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_store.store_user_relationship.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, ULong, ULong, Boolean, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, ULong, ULong, Boolean, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return StoreUserRelationship.STORE_USER_RELATIONSHIP.ID;
    }

    @Override
    public Field<ULong> field2() {
        return StoreUserRelationship.STORE_USER_RELATIONSHIP.STORE_ID;
    }

    @Override
    public Field<ULong> field3() {
        return StoreUserRelationship.STORE_USER_RELATIONSHIP.USER_ID;
    }

    @Override
    public Field<Boolean> field4() {
        return StoreUserRelationship.STORE_USER_RELATIONSHIP.IS_STORE_OWNER;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return StoreUserRelationship.STORE_USER_RELATIONSHIP.CREATE_TIME;
    }

    @Override
    public Field<ULong> field6() {
        return StoreUserRelationship.STORE_USER_RELATIONSHIP.CREATE_USER_ID;
    }

    @Override
    public Field<ULong> field7() {
        return StoreUserRelationship.STORE_USER_RELATIONSHIP.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public ULong component2() {
        return getStoreId();
    }

    @Override
    public ULong component3() {
        return getUserId();
    }

    @Override
    public Boolean component4() {
        return getIsStoreOwner();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public ULong component6() {
        return getCreateUserId();
    }

    @Override
    public ULong component7() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public ULong value2() {
        return getStoreId();
    }

    @Override
    public ULong value3() {
        return getUserId();
    }

    @Override
    public Boolean value4() {
        return getIsStoreOwner();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public ULong value6() {
        return getCreateUserId();
    }

    @Override
    public ULong value7() {
        return getIsDeleted();
    }

    @Override
    public StoreUserRelationshipRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public StoreUserRelationshipRecord value2(ULong value) {
        setStoreId(value);
        return this;
    }

    @Override
    public StoreUserRelationshipRecord value3(ULong value) {
        setUserId(value);
        return this;
    }

    @Override
    public StoreUserRelationshipRecord value4(Boolean value) {
        setIsStoreOwner(value);
        return this;
    }

    @Override
    public StoreUserRelationshipRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public StoreUserRelationshipRecord value6(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public StoreUserRelationshipRecord value7(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public StoreUserRelationshipRecord values(ULong value1, ULong value2, ULong value3, Boolean value4, LocalDateTime value5, ULong value6, ULong value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoreUserRelationshipRecord
     */
    public StoreUserRelationshipRecord() {
        super(StoreUserRelationship.STORE_USER_RELATIONSHIP);
    }

    /**
     * Create a detached, initialised StoreUserRelationshipRecord
     */
    public StoreUserRelationshipRecord(ULong id, ULong storeId, ULong userId, Boolean isStoreOwner, LocalDateTime createTime, ULong createUserId, ULong isDeleted) {
        super(StoreUserRelationship.STORE_USER_RELATIONSHIP);

        set(0, id);
        set(1, storeId);
        set(2, userId);
        set(3, isStoreOwner);
        set(4, createTime);
        set(5, createUserId);
        set(6, isDeleted);
    }
}
