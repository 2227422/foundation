/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.store.impl.jooq.generation.tables;


import com.wuda.foundation.store.impl.jooq.generation.Keys;
import com.wuda.foundation.store.impl.jooq.generation.tables.records.StoreRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;


/**
 * 店铺信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Store extends TableImpl<StoreRecord> {

    private static final long serialVersionUID = 786669899;

    /**
     * The reference instance of <code>store.store</code>
     */
    public static final Store STORE_ = new Store();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StoreRecord> getRecordType() {
        return StoreRecord.class;
    }

    /**
     * The column <code>store.store.store_id</code>.
     */
    public final TableField<StoreRecord, ULong> STORE_ID = createField(DSL.name("store_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>store.store.type</code>. 店铺类型
     */
    public final TableField<StoreRecord, UByte> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "店铺类型");

    /**
     * The column <code>store.store.state</code>. 店铺状态
     */
    public final TableField<StoreRecord, UByte> STATE = createField(DSL.name("state"), org.jooq.impl.SQLDataType.TINYINTUNSIGNED.nullable(false), this, "店铺状态");

    /**
     * The column <code>store.store.create_time</code>.
     */
    public final TableField<StoreRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>store.store.create_user_id</code>.
     */
    public final TableField<StoreRecord, ULong> CREATE_USER_ID = createField(DSL.name("create_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>store.store.last_modify_time</code>.
     */
    public final TableField<StoreRecord, LocalDateTime> LAST_MODIFY_TIME = createField(DSL.name("last_modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>store.store.last_modify_user_id</code>.
     */
    public final TableField<StoreRecord, ULong> LAST_MODIFY_USER_ID = createField(DSL.name("last_modify_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>store.store.is_deleted</code>.
     */
    public final TableField<StoreRecord, ULong> IS_DELETED = createField(DSL.name("is_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>store.store</code> table reference
     */
    public Store() {
        this(DSL.name("store"), null);
    }

    /**
     * Create an aliased <code>store.store</code> table reference
     */
    public Store(String alias) {
        this(DSL.name(alias), STORE_);
    }

    /**
     * Create an aliased <code>store.store</code> table reference
     */
    public Store(Name alias) {
        this(alias, STORE_);
    }

    private Store(Name alias, Table<StoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private Store(Name alias, Table<StoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("店铺信息"), TableOptions.table());
    }

    public <O extends Record> Store(Table<O> child, ForeignKey<O, StoreRecord> key) {
        super(child, key, STORE_);
    }

    @Override
    public Schema getSchema() {
        return com.wuda.foundation.store.impl.jooq.generation.Store.STORE;
    }

    @Override
    public Identity<StoreRecord, ULong> getIdentity() {
        return Keys.IDENTITY_STORE_;
    }

    @Override
    public UniqueKey<StoreRecord> getPrimaryKey() {
        return Keys.KEY_STORE_PRIMARY;
    }

    @Override
    public List<UniqueKey<StoreRecord>> getKeys() {
        return Arrays.<UniqueKey<StoreRecord>>asList(Keys.KEY_STORE_PRIMARY);
    }

    @Override
    public Store as(String alias) {
        return new Store(DSL.name(alias), this);
    }

    @Override
    public Store as(Name alias) {
        return new Store(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Store rename(String name) {
        return new Store(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Store rename(Name name) {
        return new Store(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, UByte, UByte, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row8) super.fieldsRow();
    }
}
