/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.security.impl.jooq.generation;


import com.wuda.foundation.security.impl.jooq.generation.tables.PermissionAction;
import com.wuda.foundation.security.impl.jooq.generation.tables.PermissionCategory;
import com.wuda.foundation.security.impl.jooq.generation.tables.PermissionTarget;
import com.wuda.foundation.security.impl.jooq.generation.tables.SubjectPermissionRelationship;
import com.wuda.foundation.security.impl.jooq.generation.tables.records.PermissionActionRecord;
import com.wuda.foundation.security.impl.jooq.generation.tables.records.PermissionCategoryRecord;
import com.wuda.foundation.security.impl.jooq.generation.tables.records.PermissionTargetRecord;
import com.wuda.foundation.security.impl.jooq.generation.tables.records.SubjectPermissionRelationshipRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.ULong;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>foundation_security</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<PermissionActionRecord, ULong> IDENTITY_PERMISSION_ACTION = Identities0.IDENTITY_PERMISSION_ACTION;
    public static final Identity<PermissionTargetRecord, ULong> IDENTITY_PERMISSION_TARGET = Identities0.IDENTITY_PERMISSION_TARGET;
    public static final Identity<SubjectPermissionRelationshipRecord, ULong> IDENTITY_SUBJECT_PERMISSION_RELATIONSHIP = Identities0.IDENTITY_SUBJECT_PERMISSION_RELATIONSHIP;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<PermissionActionRecord> KEY_PERMISSION_ACTION_PRIMARY = UniqueKeys0.KEY_PERMISSION_ACTION_PRIMARY;
    public static final UniqueKey<PermissionActionRecord> KEY_PERMISSION_ACTION_IDX_PERMISSION_ACTION = UniqueKeys0.KEY_PERMISSION_ACTION_IDX_PERMISSION_ACTION;
    public static final UniqueKey<PermissionCategoryRecord> KEY_PERMISSION_CATEGORY_PRIMARY = UniqueKeys0.KEY_PERMISSION_CATEGORY_PRIMARY;
    public static final UniqueKey<PermissionCategoryRecord> KEY_PERMISSION_CATEGORY_PERMISSION_CATEGORY_ID = UniqueKeys0.KEY_PERMISSION_CATEGORY_PERMISSION_CATEGORY_ID;
    public static final UniqueKey<PermissionTargetRecord> KEY_PERMISSION_TARGET_PRIMARY = UniqueKeys0.KEY_PERMISSION_TARGET_PRIMARY;
    public static final UniqueKey<PermissionTargetRecord> KEY_PERMISSION_TARGET_IDX_PERMISSION_NAME = UniqueKeys0.KEY_PERMISSION_TARGET_IDX_PERMISSION_NAME;
    public static final UniqueKey<SubjectPermissionRelationshipRecord> KEY_SUBJECT_PERMISSION_RELATIONSHIP_PRIMARY = UniqueKeys0.KEY_SUBJECT_PERMISSION_RELATIONSHIP_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<PermissionActionRecord, ULong> IDENTITY_PERMISSION_ACTION = Internal.createIdentity(PermissionAction.PERMISSION_ACTION, PermissionAction.PERMISSION_ACTION.PERMISSION_ACTION_ID);
        public static Identity<PermissionTargetRecord, ULong> IDENTITY_PERMISSION_TARGET = Internal.createIdentity(PermissionTarget.PERMISSION_TARGET, PermissionTarget.PERMISSION_TARGET.PERMISSION_TARGET_ID);
        public static Identity<SubjectPermissionRelationshipRecord, ULong> IDENTITY_SUBJECT_PERMISSION_RELATIONSHIP = Internal.createIdentity(SubjectPermissionRelationship.SUBJECT_PERMISSION_RELATIONSHIP, SubjectPermissionRelationship.SUBJECT_PERMISSION_RELATIONSHIP.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<PermissionActionRecord> KEY_PERMISSION_ACTION_PRIMARY = Internal.createUniqueKey(PermissionAction.PERMISSION_ACTION, "KEY_permission_action_PRIMARY", new TableField[] { PermissionAction.PERMISSION_ACTION.PERMISSION_ACTION_ID }, true);
        public static final UniqueKey<PermissionActionRecord> KEY_PERMISSION_ACTION_IDX_PERMISSION_ACTION = Internal.createUniqueKey(PermissionAction.PERMISSION_ACTION, "KEY_permission_action_idx_permission_action", new TableField[] { PermissionAction.PERMISSION_ACTION.PERMISSION_TARGET_ID, PermissionAction.PERMISSION_ACTION.NAME, PermissionAction.PERMISSION_ACTION.IS_DELETED }, true);
        public static final UniqueKey<PermissionCategoryRecord> KEY_PERMISSION_CATEGORY_PRIMARY = Internal.createUniqueKey(PermissionCategory.PERMISSION_CATEGORY, "KEY_permission_category_PRIMARY", new TableField[] { PermissionCategory.PERMISSION_CATEGORY.PERMISSION_CATEGORY_ID }, true);
        public static final UniqueKey<PermissionCategoryRecord> KEY_PERMISSION_CATEGORY_PERMISSION_CATEGORY_ID = Internal.createUniqueKey(PermissionCategory.PERMISSION_CATEGORY, "KEY_permission_category_permission_category_id", new TableField[] { PermissionCategory.PERMISSION_CATEGORY.PERMISSION_CATEGORY_ID }, true);
        public static final UniqueKey<PermissionTargetRecord> KEY_PERMISSION_TARGET_PRIMARY = Internal.createUniqueKey(PermissionTarget.PERMISSION_TARGET, "KEY_permission_target_PRIMARY", new TableField[] { PermissionTarget.PERMISSION_TARGET.PERMISSION_TARGET_ID }, true);
        public static final UniqueKey<PermissionTargetRecord> KEY_PERMISSION_TARGET_IDX_PERMISSION_NAME = Internal.createUniqueKey(PermissionTarget.PERMISSION_TARGET, "KEY_permission_target_idx_permission_name", new TableField[] { PermissionTarget.PERMISSION_TARGET.PERMISSION_CATEGORY_ID, PermissionTarget.PERMISSION_TARGET.NAME, PermissionTarget.PERMISSION_TARGET.IS_DELETED }, true);
        public static final UniqueKey<SubjectPermissionRelationshipRecord> KEY_SUBJECT_PERMISSION_RELATIONSHIP_PRIMARY = Internal.createUniqueKey(SubjectPermissionRelationship.SUBJECT_PERMISSION_RELATIONSHIP, "KEY_subject_permission_relationship_PRIMARY", new TableField[] { SubjectPermissionRelationship.SUBJECT_PERMISSION_RELATIONSHIP.ID }, true);
    }
}
