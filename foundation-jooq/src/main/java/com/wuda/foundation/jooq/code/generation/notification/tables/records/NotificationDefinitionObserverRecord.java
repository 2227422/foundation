/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.notification.tables.records;


import com.wuda.foundation.jooq.code.generation.notification.tables.NotificationDefinitionObserver;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.ULong;

import java.time.LocalDateTime;


/**
 * 定义通知的观察者，用于接收或者查看通知
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationDefinitionObserverRecord extends UpdatableRecordImpl<NotificationDefinitionObserverRecord> implements Record10<ULong, ULong, ULong, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -1400818379;

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.notification_definition_observer_id</code>. 表的主键
     */
    public void setNotificationDefinitionObserverId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.notification_definition_observer_id</code>. 表的主键
     */
    public ULong getNotificationDefinitionObserverId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.notification_definition_id</code>.
     */
    public void setNotificationDefinitionId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.notification_definition_id</code>.
     */
    public ULong getNotificationDefinitionId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.notification_definition_send_method_id</code>. 表示这个接收者接收哪种方式的通知，比如接收短信的通知。这样做的一个好处是，每种发布方式都可以定义自己的接收者，即短信可以选择一批人，邮件可以选择宁外的一批人，站内信也可以选择一批人接收，等等。
     */
    public void setNotificationDefinitionSendMethodId(ULong value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.notification_definition_send_method_id</code>. 表示这个接收者接收哪种方式的通知，比如接收短信的通知。这样做的一个好处是，每种发布方式都可以定义自己的接收者，即短信可以选择一批人，邮件可以选择宁外的一批人，站内信也可以选择一批人接收，等等。
     */
    public ULong getNotificationDefinitionSendMethodId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.observer_type</code>. 接收者类型
     */
    public void setObserverType(UByte value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.observer_type</code>. 接收者类型
     */
    public UByte getObserverType() {
        return (UByte) get(3);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.observer_identifier</code>. 接收者唯一标记
     */
    public void setObserverIdentifier(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.observer_identifier</code>. 接收者唯一标记
     */
    public ULong getObserverIdentifier() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>foundation_notification.notification_definition_observer.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(9, value);
    }

    /**
     * Getter for <code>foundation_notification.notification_definition_observer.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, ULong, ULong, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<ULong, ULong, ULong, UByte, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.NOTIFICATION_DEFINITION_OBSERVER_ID;
    }

    @Override
    public Field<ULong> field2() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.NOTIFICATION_DEFINITION_ID;
    }

    @Override
    public Field<ULong> field3() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.NOTIFICATION_DEFINITION_SEND_METHOD_ID;
    }

    @Override
    public Field<UByte> field4() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.OBSERVER_TYPE;
    }

    @Override
    public Field<ULong> field5() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.OBSERVER_IDENTIFIER;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.CREATE_TIME;
    }

    @Override
    public Field<ULong> field7() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field9() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field10() {
        return NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getNotificationDefinitionObserverId();
    }

    @Override
    public ULong component2() {
        return getNotificationDefinitionId();
    }

    @Override
    public ULong component3() {
        return getNotificationDefinitionSendMethodId();
    }

    @Override
    public UByte component4() {
        return getObserverType();
    }

    @Override
    public ULong component5() {
        return getObserverIdentifier();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public ULong component7() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component8() {
        return getLastModifyTime();
    }

    @Override
    public ULong component9() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component10() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getNotificationDefinitionObserverId();
    }

    @Override
    public ULong value2() {
        return getNotificationDefinitionId();
    }

    @Override
    public ULong value3() {
        return getNotificationDefinitionSendMethodId();
    }

    @Override
    public UByte value4() {
        return getObserverType();
    }

    @Override
    public ULong value5() {
        return getObserverIdentifier();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public ULong value7() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value8() {
        return getLastModifyTime();
    }

    @Override
    public ULong value9() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value10() {
        return getIsDeleted();
    }

    @Override
    public NotificationDefinitionObserverRecord value1(ULong value) {
        setNotificationDefinitionObserverId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value2(ULong value) {
        setNotificationDefinitionId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value3(ULong value) {
        setNotificationDefinitionSendMethodId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value4(UByte value) {
        setObserverType(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value5(ULong value) {
        setObserverIdentifier(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value7(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value8(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value9(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord value10(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public NotificationDefinitionObserverRecord values(ULong value1, ULong value2, ULong value3, UByte value4, ULong value5, LocalDateTime value6, ULong value7, LocalDateTime value8, ULong value9, ULong value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationDefinitionObserverRecord
     */
    public NotificationDefinitionObserverRecord() {
        super(NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER);
    }

    /**
     * Create a detached, initialised NotificationDefinitionObserverRecord
     */
    public NotificationDefinitionObserverRecord(ULong notificationDefinitionObserverId, ULong notificationDefinitionId, ULong notificationDefinitionSendMethodId, UByte observerType, ULong observerIdentifier, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(NotificationDefinitionObserver.NOTIFICATION_DEFINITION_OBSERVER);

        set(0, notificationDefinitionObserverId);
        set(1, notificationDefinitionId);
        set(2, notificationDefinitionSendMethodId);
        set(3, observerType);
        set(4, observerIdentifier);
        set(5, createTime);
        set(6, createUserId);
        set(7, lastModifyTime);
        set(8, lastModifyUserId);
        set(9, isDeleted);
    }
}
