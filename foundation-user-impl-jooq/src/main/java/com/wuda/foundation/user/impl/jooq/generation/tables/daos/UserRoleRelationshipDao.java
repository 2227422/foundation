/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.user.impl.jooq.generation.tables.daos;


import com.wuda.foundation.user.impl.jooq.generation.tables.UserRoleRelationship;
import com.wuda.foundation.user.impl.jooq.generation.tables.records.UserRoleRelationshipRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.jooq.types.ULong;


/**
 * 用户与角色的关联关系
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoleRelationshipDao extends DAOImpl<UserRoleRelationshipRecord, com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship, ULong> {

    /**
     * Create a new UserRoleRelationshipDao without any configuration
     */
    public UserRoleRelationshipDao() {
        super(UserRoleRelationship.USER_ROLE_RELATIONSHIP, com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship.class);
    }

    /**
     * Create a new UserRoleRelationshipDao with an attached configuration
     */
    public UserRoleRelationshipDao(Configuration configuration) {
        super(UserRoleRelationship.USER_ROLE_RELATIONSHIP, com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship.class, configuration);
    }

    @Override
    public ULong getId(com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchRangeOfId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserRoleRelationship.USER_ROLE_RELATIONSHIP.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchById(ULong... values) {
        return fetch(UserRoleRelationship.USER_ROLE_RELATIONSHIP.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship fetchOneById(ULong value) {
        return fetchOne(UserRoleRelationship.USER_ROLE_RELATIONSHIP.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchRangeOfUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserRoleRelationship.USER_ROLE_RELATIONSHIP.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchByUserId(ULong... values) {
        return fetch(UserRoleRelationship.USER_ROLE_RELATIONSHIP.USER_ID, values);
    }

    /**
     * Fetch records that have <code>role_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchRangeOfRoleId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserRoleRelationship.USER_ROLE_RELATIONSHIP.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>role_id IN (values)</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchByRoleId(ULong... values) {
        return fetch(UserRoleRelationship.USER_ROLE_RELATIONSHIP.ROLE_ID, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserRoleRelationship.USER_ROLE_RELATIONSHIP.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchByCreateTime(LocalDateTime... values) {
        return fetch(UserRoleRelationship.USER_ROLE_RELATIONSHIP.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>create_user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchRangeOfCreateUserId(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserRoleRelationship.USER_ROLE_RELATIONSHIP.CREATE_USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_user_id IN (values)</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchByCreateUserId(ULong... values) {
        return fetch(UserRoleRelationship.USER_ROLE_RELATIONSHIP.CREATE_USER_ID, values);
    }

    /**
     * Fetch records that have <code>is_deleted BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchRangeOfIsDeleted(ULong lowerInclusive, ULong upperInclusive) {
        return fetchRange(UserRoleRelationship.USER_ROLE_RELATIONSHIP.IS_DELETED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_deleted IN (values)</code>
     */
    public List<com.wuda.foundation.user.impl.jooq.generation.tables.pojos.UserRoleRelationship> fetchByIsDeleted(ULong... values) {
        return fetch(UserRoleRelationship.USER_ROLE_RELATIONSHIP.IS_DELETED, values);
    }
}
