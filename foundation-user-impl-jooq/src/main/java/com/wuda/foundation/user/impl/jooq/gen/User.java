/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.user.impl.jooq.gen;


import com.wuda.foundation.user.impl.jooq.gen.tables.IndividualUserGeneral;
import com.wuda.foundation.user.impl.jooq.gen.tables.Role;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserAccount;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserEmail;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserPhone;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserRoleRelationship;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User extends SchemaImpl {

    private static final long serialVersionUID = -888821429;

    /**
     * The reference instance of <code>user</code>
     */
    public static final User USER = new User();

    /**
     * 个人用户－基本信息
     */
    public final IndividualUserGeneral INDIVIDUAL_USER_GENERAL = IndividualUserGeneral.INDIVIDUAL_USER_GENERAL;

    /**
     * 角色。role本身就是一类用户的统称，有category的意味，因此没有role_category这样的表设计。如果有层级关系，比如一级管理员，二级管理员，并且它们之间又有联系，那么可以考虑在role表中增加parent_id这样的字段表示层级关系。
     */
    public final Role ROLE = Role.ROLE;

    /**
     * 用户有很多类型，比如一种分类方法是把用户分成个人用户和企业用户，而不同类型的用户需要的字段不一样，但是他们都是用户，即 is-a user。这个表属于所有用户的基本信息，其他不同类型的用户有自己专属的表，然后用用户ID关联回这个表。这样做还有一个好处，那就是其他表中的用户ID都统一关联回这个表，这样用户ID就不会有歧义了。
     */
    public final com.wuda.foundation.user.impl.jooq.gen.tables.User USER_ = com.wuda.foundation.user.impl.jooq.gen.tables.User.USER_;

    /**
     * 用户账号信息，适用各种类型的用户
     */
    public final UserAccount USER_ACCOUNT = UserAccount.USER_ACCOUNT;

    /**
     * 用户的email
     */
    public final UserEmail USER_EMAIL = UserEmail.USER_EMAIL;

    /**
     * 用户的电话
     */
    public final UserPhone USER_PHONE = UserPhone.USER_PHONE;

    /**
     * 用户与角色的关联关系
     */
    public final UserRoleRelationship USER_ROLE_RELATIONSHIP = UserRoleRelationship.USER_ROLE_RELATIONSHIP;

    /**
     * No further instances allowed
     */
    private User() {
        super("user", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.<Table<?>>asList(
            IndividualUserGeneral.INDIVIDUAL_USER_GENERAL,
            Role.ROLE,
            com.wuda.foundation.user.impl.jooq.gen.tables.User.USER_,
            UserAccount.USER_ACCOUNT,
            UserEmail.USER_EMAIL,
            UserPhone.USER_PHONE,
            UserRoleRelationship.USER_ROLE_RELATIONSHIP);
    }
}
