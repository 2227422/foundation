/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.user.impl.jooq.gen;


import com.wuda.foundation.user.impl.jooq.gen.tables.IndividualUserGeneral;
import com.wuda.foundation.user.impl.jooq.gen.tables.Role;
import com.wuda.foundation.user.impl.jooq.gen.tables.User;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserAccount;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserEmail;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserPhone;
import com.wuda.foundation.user.impl.jooq.gen.tables.UserRoleRelationship;
import com.wuda.foundation.user.impl.jooq.gen.tables.records.IndividualUserGeneralRecord;
import com.wuda.foundation.user.impl.jooq.gen.tables.records.RoleRecord;
import com.wuda.foundation.user.impl.jooq.gen.tables.records.UserAccountRecord;
import com.wuda.foundation.user.impl.jooq.gen.tables.records.UserEmailRecord;
import com.wuda.foundation.user.impl.jooq.gen.tables.records.UserPhoneRecord;
import com.wuda.foundation.user.impl.jooq.gen.tables.records.UserRecord;
import com.wuda.foundation.user.impl.jooq.gen.tables.records.UserRoleRelationshipRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;
import org.jooq.types.ULong;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>user</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<IndividualUserGeneralRecord, ULong> IDENTITY_INDIVIDUAL_USER_GENERAL = Identities0.IDENTITY_INDIVIDUAL_USER_GENERAL;
    public static final Identity<UserRecord, Long> IDENTITY_USER_ = Identities0.IDENTITY_USER_;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<IndividualUserGeneralRecord> KEY_INDIVIDUAL_USER_GENERAL_PRIMARY = UniqueKeys0.KEY_INDIVIDUAL_USER_GENERAL_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = UniqueKeys0.KEY_ROLE_PRIMARY;
    public static final UniqueKey<RoleRecord> KEY_ROLE_IDX_ROLE_NAME = UniqueKeys0.KEY_ROLE_IDX_ROLE_NAME;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_USER_ID = UniqueKeys0.KEY_USER_USER_ID;
    public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_PRIMARY = UniqueKeys0.KEY_USER_ACCOUNT_PRIMARY;
    public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_USER_ID = UniqueKeys0.KEY_USER_ACCOUNT_USER_ID;
    public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_IDX_USERNAME = UniqueKeys0.KEY_USER_ACCOUNT_IDX_USERNAME;
    public static final UniqueKey<UserEmailRecord> KEY_USER_EMAIL_PRIMARY = UniqueKeys0.KEY_USER_EMAIL_PRIMARY;
    public static final UniqueKey<UserEmailRecord> KEY_USER_EMAIL_IDX_UNIQUE = UniqueKeys0.KEY_USER_EMAIL_IDX_UNIQUE;
    public static final UniqueKey<UserPhoneRecord> KEY_USER_PHONE_PRIMARY = UniqueKeys0.KEY_USER_PHONE_PRIMARY;
    public static final UniqueKey<UserPhoneRecord> KEY_USER_PHONE_IDX_UNIQUE = UniqueKeys0.KEY_USER_PHONE_IDX_UNIQUE;
    public static final UniqueKey<UserRoleRelationshipRecord> KEY_USER_ROLE_RELATIONSHIP_PRIMARY = UniqueKeys0.KEY_USER_ROLE_RELATIONSHIP_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<IndividualUserGeneralRecord, ULong> IDENTITY_INDIVIDUAL_USER_GENERAL = Internal.createIdentity(IndividualUserGeneral.INDIVIDUAL_USER_GENERAL, IndividualUserGeneral.INDIVIDUAL_USER_GENERAL.INDIVIDUAL_USER_GENERAL_ID);
        public static Identity<UserRecord, Long> IDENTITY_USER_ = Internal.createIdentity(User.USER_, User.USER_.USER_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<IndividualUserGeneralRecord> KEY_INDIVIDUAL_USER_GENERAL_PRIMARY = Internal.createUniqueKey(IndividualUserGeneral.INDIVIDUAL_USER_GENERAL, "KEY_individual_user_general_PRIMARY", new TableField[] { IndividualUserGeneral.INDIVIDUAL_USER_GENERAL.INDIVIDUAL_USER_GENERAL_ID }, true);
        public static final UniqueKey<RoleRecord> KEY_ROLE_PRIMARY = Internal.createUniqueKey(Role.ROLE, "KEY_role_PRIMARY", new TableField[] { Role.ROLE.ROLE_ID }, true);
        public static final UniqueKey<RoleRecord> KEY_ROLE_IDX_ROLE_NAME = Internal.createUniqueKey(Role.ROLE, "KEY_role_idx_role_name", new TableField[] { Role.ROLE.NAME, Role.ROLE.IS_DELETED }, true);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER_, "KEY_user_PRIMARY", new TableField[] { User.USER_.USER_ID }, true);
        public static final UniqueKey<UserRecord> KEY_USER_USER_ID = Internal.createUniqueKey(User.USER_, "KEY_user_user_id", new TableField[] { User.USER_.USER_ID }, true);
        public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_PRIMARY = Internal.createUniqueKey(UserAccount.USER_ACCOUNT, "KEY_user_account_PRIMARY", new TableField[] { UserAccount.USER_ACCOUNT.USER_ACCOUNT_ID }, true);
        public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_USER_ID = Internal.createUniqueKey(UserAccount.USER_ACCOUNT, "KEY_user_account_user_id", new TableField[] { UserAccount.USER_ACCOUNT.USER_ID }, true);
        public static final UniqueKey<UserAccountRecord> KEY_USER_ACCOUNT_IDX_USERNAME = Internal.createUniqueKey(UserAccount.USER_ACCOUNT, "KEY_user_account_idx_username", new TableField[] { UserAccount.USER_ACCOUNT.USERNAME, UserAccount.USER_ACCOUNT.IS_DELETED }, true);
        public static final UniqueKey<UserEmailRecord> KEY_USER_EMAIL_PRIMARY = Internal.createUniqueKey(UserEmail.USER_EMAIL, "KEY_user_email_PRIMARY", new TableField[] { UserEmail.USER_EMAIL.ID }, true);
        public static final UniqueKey<UserEmailRecord> KEY_USER_EMAIL_IDX_UNIQUE = Internal.createUniqueKey(UserEmail.USER_EMAIL, "KEY_user_email_idx_unique", new TableField[] { UserEmail.USER_EMAIL.EMAIL_ID, UserEmail.USER_EMAIL.USAGE, UserEmail.USER_EMAIL.IS_DELETED }, true);
        public static final UniqueKey<UserPhoneRecord> KEY_USER_PHONE_PRIMARY = Internal.createUniqueKey(UserPhone.USER_PHONE, "KEY_user_phone_PRIMARY", new TableField[] { UserPhone.USER_PHONE.ID }, true);
        public static final UniqueKey<UserPhoneRecord> KEY_USER_PHONE_IDX_UNIQUE = Internal.createUniqueKey(UserPhone.USER_PHONE, "KEY_user_phone_idx_unique", new TableField[] { UserPhone.USER_PHONE.PHONE_ID, UserPhone.USER_PHONE.USAGE, UserPhone.USER_PHONE.IS_DELETED }, true);
        public static final UniqueKey<UserRoleRelationshipRecord> KEY_USER_ROLE_RELATIONSHIP_PRIMARY = Internal.createUniqueKey(UserRoleRelationship.USER_ROLE_RELATIONSHIP, "KEY_user_role_relationship_PRIMARY", new TableField[] { UserRoleRelationship.USER_ROLE_RELATIONSHIP.ID }, true);
    }
}
