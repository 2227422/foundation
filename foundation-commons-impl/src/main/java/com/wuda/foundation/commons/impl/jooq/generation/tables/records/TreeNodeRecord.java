/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.commons.impl.jooq.generation.tables.records;


import com.wuda.foundation.commons.impl.jooq.generation.tables.TreeNode;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * 树形结构的节点。有很多数据是用树形结构组织的，比如商品分类，文章分类，组织架构等等，通常我们都是为它们单独设计一个表，比如商品分类表，部门表，然后每个表都写了差不多相同的处理逻辑，如何避免重复处理类似树形的数据呢？这个表的目的就是为了统一处理这些类似树形结构的表，以这个表为核心，扩展出商品分类，文章分类，部门等。
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TreeNodeRecord extends UpdatableRecordImpl<TreeNodeRecord> implements Record9<ULong, String, String, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -362693781;

    /**
     * Setter for <code>foundation_commons.tree_node.tree_node_id</code>.
     */
    public void setTreeNodeId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.tree_node_id</code>.
     */
    public ULong getTreeNodeId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.name</code>. 节点名称
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.name</code>. 节点名称
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.description</code>. 节点的描述
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.description</code>. 节点的描述
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.parent_node_id</code>. 指向父节点ID
     */
    public void setParentNodeId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.parent_node_id</code>. 指向父节点ID
     */
    public ULong getParentNodeId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(7);
    }

    /**
     * Setter for <code>foundation_commons.tree_node.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(8, value);
    }

    /**
     * Getter for <code>foundation_commons.tree_node.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<ULong, String, String, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<ULong, String, String, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return TreeNode.TREE_NODE.TREE_NODE_ID;
    }

    @Override
    public Field<String> field2() {
        return TreeNode.TREE_NODE.NAME;
    }

    @Override
    public Field<String> field3() {
        return TreeNode.TREE_NODE.DESCRIPTION;
    }

    @Override
    public Field<ULong> field4() {
        return TreeNode.TREE_NODE.PARENT_NODE_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TreeNode.TREE_NODE.CREATE_TIME;
    }

    @Override
    public Field<ULong> field6() {
        return TreeNode.TREE_NODE.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return TreeNode.TREE_NODE.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field8() {
        return TreeNode.TREE_NODE.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field9() {
        return TreeNode.TREE_NODE.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getTreeNodeId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public ULong component4() {
        return getParentNodeId();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public ULong component6() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component7() {
        return getLastModifyTime();
    }

    @Override
    public ULong component8() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component9() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getTreeNodeId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public ULong value4() {
        return getParentNodeId();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public ULong value6() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value7() {
        return getLastModifyTime();
    }

    @Override
    public ULong value8() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value9() {
        return getIsDeleted();
    }

    @Override
    public TreeNodeRecord value1(ULong value) {
        setTreeNodeId(value);
        return this;
    }

    @Override
    public TreeNodeRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TreeNodeRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TreeNodeRecord value4(ULong value) {
        setParentNodeId(value);
        return this;
    }

    @Override
    public TreeNodeRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public TreeNodeRecord value6(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public TreeNodeRecord value7(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public TreeNodeRecord value8(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public TreeNodeRecord value9(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public TreeNodeRecord values(ULong value1, String value2, String value3, ULong value4, LocalDateTime value5, ULong value6, LocalDateTime value7, ULong value8, ULong value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TreeNodeRecord
     */
    public TreeNodeRecord() {
        super(TreeNode.TREE_NODE);
    }

    /**
     * Create a detached, initialised TreeNodeRecord
     */
    public TreeNodeRecord(ULong treeNodeId, String name, String description, ULong parentNodeId, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(TreeNode.TREE_NODE);

        set(0, treeNodeId);
        set(1, name);
        set(2, description);
        set(3, parentNodeId);
        set(4, createTime);
        set(5, createUserId);
        set(6, lastModifyTime);
        set(7, lastModifyUserId);
        set(8, isDeleted);
    }
}
