/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.commons.impl.jooq.generation.tables.records;


import com.wuda.foundation.commons.impl.jooq.generation.tables.Group;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * 店铺是一种组，组织机构是一种组，部门也是一种组，等等，这个表就作为所有这些组的基础结构。为什么要用一个组这样的基础表呢？原因是：1，这些组有很多相同的概念，因此可以统一处理这些组相关的逻辑,；2，组织机构等是可以有上下级的，因此，基于tree_node统一处理所有这些组的树形结构；3，基本上所有的实体都有以某种方式组织起来（比如分类），但是很多实体的组织在业务发展的一开始不是很明确的，比如用户属于公司某个部门，但是随着业务的发展，为用户创建了群（比如微信的群），如果使用抽象的group_id和user_id
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupRecord extends UpdatableRecordImpl<GroupRecord> implements Record7<ULong, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = 1047022219;

    /**
     * Setter for <code>foundation_commons.group.group_id</code>.
     */
    public void setGroupId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>foundation_commons.group.group_id</code>.
     */
    public ULong getGroupId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>foundation_commons.group.parent_group_id</code>. 父级组ID
     */
    public void setParentGroupId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>foundation_commons.group.parent_group_id</code>. 父级组ID
     */
    public ULong getParentGroupId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>foundation_commons.group.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>foundation_commons.group.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>foundation_commons.group.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(3, value);
    }

    /**
     * Getter for <code>foundation_commons.group.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>foundation_commons.group.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>foundation_commons.group.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>foundation_commons.group.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(5, value);
    }

    /**
     * Getter for <code>foundation_commons.group.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(5);
    }

    /**
     * Setter for <code>foundation_commons.group.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>foundation_commons.group.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<ULong, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<ULong, ULong, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Group.GROUP.GROUP_ID;
    }

    @Override
    public Field<ULong> field2() {
        return Group.GROUP.PARENT_GROUP_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Group.GROUP.CREATE_TIME;
    }

    @Override
    public Field<ULong> field4() {
        return Group.GROUP.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Group.GROUP.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field6() {
        return Group.GROUP.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field7() {
        return Group.GROUP.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getGroupId();
    }

    @Override
    public ULong component2() {
        return getParentGroupId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreateTime();
    }

    @Override
    public ULong component4() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component5() {
        return getLastModifyTime();
    }

    @Override
    public ULong component6() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component7() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getGroupId();
    }

    @Override
    public ULong value2() {
        return getParentGroupId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreateTime();
    }

    @Override
    public ULong value4() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value5() {
        return getLastModifyTime();
    }

    @Override
    public ULong value6() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value7() {
        return getIsDeleted();
    }

    @Override
    public GroupRecord value1(ULong value) {
        setGroupId(value);
        return this;
    }

    @Override
    public GroupRecord value2(ULong value) {
        setParentGroupId(value);
        return this;
    }

    @Override
    public GroupRecord value3(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public GroupRecord value4(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public GroupRecord value5(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public GroupRecord value6(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public GroupRecord value7(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public GroupRecord values(ULong value1, ULong value2, LocalDateTime value3, ULong value4, LocalDateTime value5, ULong value6, ULong value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GroupRecord
     */
    public GroupRecord() {
        super(Group.GROUP);
    }

    /**
     * Create a detached, initialised GroupRecord
     */
    public GroupRecord(ULong groupId, ULong parentGroupId, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(Group.GROUP);

        set(0, groupId);
        set(1, parentGroupId);
        set(2, createTime);
        set(3, createUserId);
        set(4, lastModifyTime);
        set(5, lastModifyUserId);
        set(6, isDeleted);
    }
}
